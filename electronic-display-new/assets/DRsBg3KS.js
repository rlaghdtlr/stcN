import{f as R,r as n,y as f,z as W,k as N,o as s,c as u,A as o,x as O,a as k,V as _,F as b,v as q,s as z,j as A}from"./BIKIuSea.js";const H=R({__name:"Marquee",props:{style:{default:()=>()=>({})},class:{default:""},autoFill:{type:Boolean,default:!1},play:{type:Boolean,default:!0},pauseOnHover:{type:Boolean,default:!1},pauseOnClick:{type:Boolean,default:!1},direction:{default:"left"},speed:{default:50},delay:{default:0},loop:{default:0},gradient:{type:Boolean,default:!1},gradientColor:{default:"white"},gradientWidth:{default:200}},emits:["finish","cycleComplete"],setup(e,{emit:g}){const r=g,i=n(),d=n(),h=n(0),m=n(0),c=n(1),y=n(!1),v=n(),$=f(()=>e.autoFill?m.value*c.value/e.speed:m<h?h.value/e.speed:m.value/e.speed),x=f(()=>({...e.style,"--pause-on-hover":!e.play||e.pauseOnHover?"paused":"running","--pause-on-click":!e.play||e.pauseOnHover&&!e.pauseOnClick||e.pauseOnClick?"paused":"running","--width":e.direction==="up"||e.direction==="down"?"100vh":"100%","--transform":e.direction==="up"?"rotate(-90deg)":e.direction==="down"?"rotate(90deg)":"none"})),M=f(()=>({"--gradient-color":e.gradientColor,"--gradient-width":typeof e.gradientWidth=="number"?`${e.gradientWidth}px`:e.gradientWidth})),w=f(()=>({"--play":e.play?"running":"paused","--direction":e.direction==="left"?"normal":"reverse","--duration":`${$.value}s`,"--delay":`${e.delay}s`,"--iteration-count":e.loop?`${e.loop}`:"infinite","--min-width":e.autoFill?"auto":"100%"})),C=f(()=>({"--transform":e.direction==="up"?"rotate(90deg)":e.direction==="down"?"rotate(-90deg)":"none"})),B=()=>{if(d.value&&i.value){const a=i.value.getBoundingClientRect(),l=d.value.getBoundingClientRect();let t=a.width,p=l.width;(e.direction==="up"||e.direction==="down")&&(t=a.height,p=l.height),e.autoFill&&t&&p?c.value=p<t?Math.ceil(t/p):1:c.value=1,h.value=t,m.value=p}},F=a=>[...Array(Number.isFinite(a)&&a>=0?a:0)];return W([()=>e.autoFill,()=>e.direction,y,i],()=>{y.value&&(B(),d.value&&i.value&&(v.value&&v.value.disconnect(),v.value=new ResizeObserver(()=>B()),v.value.observe(i.value),v.value.observe(d.value)))}),N(()=>{y.value=!0}),(a,l)=>y.value?(s(),u("div",{key:0,ref_key:"containerRef",ref:i,class:z(["vfm-marquee-container",e.class]),style:o(x.value)},[a.gradient?(s(),u("div",{key:0,style:o(M.value),class:"vfm-overlay"},null,4)):O("",!0),k("div",{class:"vfm-marquee",style:o(w.value),onAnimationiteration:l[0]||(l[0]=t=>r("cycleComplete")),onAnimationend:l[1]||(l[1]=t=>r("finish"))},[k("div",{style:o(C.value),class:"vfm-parent",ref_key:"marqueeRef",ref:d},[_(a.$slots,"default")],4),(s(!0),u(b,null,q(F(c.value-1),t=>(s(),u("div",{style:o(C.value),class:"vfm-parent"},[_(a.$slots,"default")],4))),256))],36),k("div",{class:"vfm-marquee",style:o(w.value)},[(s(!0),u(b,null,q(F(c.value),t=>(s(),u("div",{style:o(C.value),class:"vfm-parent"},[_(a.$slots,"default")],4))),256))],4)],6)):O("",!0)}}),S={name:"NuxtMarquee",emits:["finish","cycleComplete"],props:["style","class","autoFill","play","pauseOnHover","pauseOnClick","direction","speed","delay","loop","gradient","gradientColor","gradientWidth"],setup(e,{slots:g,emit:r}){return()=>A(H,{...e,onCycleComplete:()=>r("cycleComplete"),onFinish:()=>r("finish")},g)}},j=Object.assign(S,{__name:"NuxtMarquee"});export{j as _};
